@page "/patients"
@using MudBlazor
@using ePrescription.Controllers
@using ePrescription.Areas.Identity.Data

@inject PatientsController _p;

<h3>Patients</h3>

@if(Users == null)
{
    <p>Loading patients. . .</p>
}
else
{
    <AuthorizeView Roles="Doctor">
            <MudTable Items="@Users" Context="doctorctx" Hover="true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Info" Filter="new Func<User,bool>(FilterFunc1)">
         <ToolBarContent>
            <MudText Typo="Typo.h6">Patient List</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <HeaderContent>
            <MudTh>First Name</MudTh>
            <MudTh>Last Name</MudTh>
            <MudTh>ID Number</MudTh>
            <MudTh>Options</MudTh>
        </HeaderContent>
        <RowTemplate>
                <MudTd DataLabel="FirstName">@doctorctx.FirstName</MudTd>
                <MudTd DataLabel="LastName">@doctorctx.LastName</MudTd>
                <MudTd DataLabel="IDNumber">@doctorctx.IDNumber</MudTd>
            <MudTh> 
                    @if (@doctorctx.Medical_History == null)
                {
                        <a href="/medical-history/create/@doctorctx.Id" class="btn btn-primary btn-sm mx-1">Medical History <span class="oi oi-warning" aria-hidden="true"></span></a>
                }
                else
                {
                        <a href="/prescription/@doctorctx.Id" class="btn btn-primary btn-sm mx-1">Prescription</a>
                }
                    <a href="/patients/details/@doctorctx.Id" class="btn btn-primary btn-sm mx-1">View More</a>
                </MudTh>
        </RowTemplate>
         <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>

    </AuthorizeView>
    <AuthorizeView Roles="Pharmacist">
                <MudTable Items="@Users" Context="pharmactx" Hover="true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Info" Filter="new Func<User,bool>(FilterFunc1)">
                     <ToolBarContent>
                        <MudText Typo="Typo.h6">Patient List</MudText>
                        <MudSpacer />
                        <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                    </ToolBarContent>
                    <HeaderContent>
                        <MudTh>First Name</MudTh>
                        <MudTh>Last Name</MudTh>
                        <MudTh>ID Number</MudTh>
                        <MudTh>Options</MudTh>
                    </HeaderContent>
                    <RowTemplate>
                <MudTd DataLabel="FirstName">@pharmactx.FirstName</MudTd>
                <MudTd DataLabel="LastName">@pharmactx.LastName</MudTd>
                <MudTd DataLabel="IDNumber">@pharmactx.IDNumber</MudTd>
                        <MudTh>
                    <a href="/prescriptions/@pharmactx.Id" class="btn btn-primary btn-sm mx-1">Prescriptions</a>
                            </MudTh>
                    </RowTemplate>
                     <PagerContent>
                        <MudTablePager />
                    </PagerContent>
                </MudTable>

    </AuthorizeView>
 }







@code {
    private List<User>? Users {get; set;}

    private string? searchString1;
    protected override async Task OnInitializedAsync()
    {
        Users = await _p.GetPatientsAsync();
    }

    private bool FilterFunc1(User user) => FilterFunc(user, searchString1);

    private bool FilterFunc(User user, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (user.FirstName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (user.LastName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (user.IDNumber.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }
}
