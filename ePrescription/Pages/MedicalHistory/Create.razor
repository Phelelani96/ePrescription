@page "/medical-history/add/{id}"
@using ePrescription.Data
@using ePrescription.Services

@inject IMedicalHistoryService _service
@inject ISnackbar _snack
<h3>Add</h3>

<MudGrid>
    <MudItem xs="12">
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-2">Medical History for: Patient Name</MudPaper>
    </MudItem>
    <MudItem xs="6" Class="h-auto">
        <MudPaper Class="d-block align-center justify-center mud-width-full py-2 px-md-8">
            <EditForm Model="@history" OnSubmit="HandleSubmit">
                @if(Diagnoses != null)
                {
                    <MudSelect T="int" Label="Disease" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter" id = "Disease">
                        @foreach(var d in Diagnoses)
                        {
                            <MudSelectItem Value="@d.Id"> @d.Description</MudSelectItem>
                        }
                    </MudSelect>
                }
            </EditForm>
           
            @if(medic != null)
            {
                <MudSelect T="Medicine" Label="Medication" Variant="Variant.Outlined" AnchorOrigin="Origin.BottomCenter" MultiSelection = "true" @bind-SelectedValues="Medicines" MultiSelectionTextFunc="@(new Func<List<string>, string>(GetMultiSelectionText))">
                   @foreach(var med in medic)
                    {
                        <MudSelectItem T="Medicine" Value="@med">@med.Name</MudSelectItem>
                    }
                </MudSelect>
            }
        </MudPaper>
    </MudItem>
    <MudItem xs="6" Class="h-auto">
        <MudPaper Class="d-block align-center justify-center mud-width-full py-2 px-md-8">
            @if(Medicines != null)
            {
                @foreach(var x in Medicines)
                {
                    <p>
                        @x.Name
                    </p>
                }
            }
            

        </MudPaper>

    </MudItem>
     <MudItem xs="12">
        <MudPaper Class="d-flex align-center justify-center mud-width-full py-2">
            <MudButton Variant = "Variant.Filled" Color = "Color.Info" ButtonType="ButtonType.Submit" >
                Save
            </MudButton>
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    [Parameter]
    public string? id {get;set;}

    private IEnumerable<Medicine> Medicines { get; set; } 
    private List<Medicine> medic { get; set; }
    private Medicine med { get; set; }
    private List<Diagnosis> Diagnoses { get; set; }
    private Medical_History history = new Medical_History();

    protected override async Task OnInitializedAsync()
    {
        await GetDiagnosis();
        await GetMedicine();
    }

    //private void GetMedicine()
    //{

    //}
    private string GetMultiSelectionText(List<string> x)
    {
        return $"{x.Count} Medicine{(x.Count > 1 ? "s have":" has")} been selected";
    }



    private async Task HandleSubmit()
    {
        var x = new ServiceResponse<bool>();
        if(Medicines == null)
        {

        }
        else
        {
            if(id != null)
            {
                history.PatientId = id;
                history.DiagnosisDate = System.DateTime.Today;

                x = await _service.AddMedicalHistoryAsync(history, Medicines);
                if(x.Data == true)
                {
                    _snack.Add(x.Message, MudBlazor.Severity.Success);
                }
                else
                {
                    _snack.Add(x.Message, MudBlazor.Severity.Warning);
                }

            }
        }
    }

    private async Task GetDiagnosis()
    {
        Diagnoses = await _service.GetDiagnosesAsync();
    }

    private async Task GetMedicine()
    {
        medic = await _service.GetMedicinesAsync();
    }
}