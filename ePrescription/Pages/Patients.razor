@page "/patients"
@using MudBlazor
@using ePrescription.Controllers
@using ePrescription.Areas.Identity.Data

@inject PatientsController _p;

<h3>Patients</h3>

@if(Users == null)
{
    <p>Loading patients. . .</p>
}
else
{
    <MudTable Items="@Users" Hover="true" Breakpoint="Breakpoint.Sm" LoadingProgressColor="Color.Info" Filter="new Func<User,bool>(FilterFunc1)">
         <ToolBarContent>
            <MudText Typo="Typo.h6">Patient List</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
        <HeaderContent>
            <MudTh>First Name</MudTh>
            <MudTh>Last Name</MudTh>
            <MudTh>ID Number</MudTh>
            <MudTh>Options</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="FirstName">@context.FirstName</MudTd>
            <MudTd DataLabel="LastName">@context.LastName</MudTd>
            <MudTd DataLabel="IDNumber">@context.IDNumber</MudTd>
            <MudTh> 
                @if(@context.Medical_History == null)
                {
                     <a href ="/medical-history/@context.Id" class="btn btn-primary btn-sm">Medical History <span class="oi oi-warning" aria-hidden="true" ></span></a>
                }
                else
                {
                     <a href ="/prescription/@context.Id" class="btn btn-primary btn-sm">Prescription</a>
                }
               
                </MudTh>
        </RowTemplate>
         <PagerContent>
            <MudTablePager />
        </PagerContent>
    </MudTable>
 }







@code {
    private List<User>? Users {get; set;}

    private string? searchString1;
    protected override async Task OnInitializedAsync()
    {
        Users = await _p.GetPatientsAsync();
    }

    private bool FilterFunc1(User user) => FilterFunc(user, searchString1);

    private bool FilterFunc(User user, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (user.FirstName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (user.LastName.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (user.IDNumber.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }
}
